var annotated_dup =
[
    [ "_infix_registry_entry_t", "struct__infix__registry__entry__t.html", "struct__infix__registry__entry__t" ],
    [ "_registry_parser_state_t", "struct__registry__parser__state__t.html", "struct__registry__parser__state__t" ],
    [ "AppContext", "structAppContext.html", "structAppContext" ],
    [ "code_buffer", "structcode__buffer.html", "structcode__buffer" ],
    [ "fuzzer_input", "structfuzzer__input.html", "structfuzzer__input" ],
    [ "infix_arena_t", "structinfix__arena__t.html", "structinfix__arena__t" ],
    [ "infix_arg_location", "structinfix__arg__location.html", "structinfix__arg__location" ],
    [ "infix_call_frame_layout", "structinfix__call__frame__layout.html", "structinfix__call__frame__layout" ],
    [ "infix_error_details_t", "structinfix__error__details__t.html", "structinfix__error__details__t" ],
    [ "infix_executable_t", "structinfix__executable__t.html", "structinfix__executable__t" ],
    [ "infix_forward_abi_spec", "structinfix__forward__abi__spec.html", "structinfix__forward__abi__spec" ],
    [ "infix_forward_t", "structinfix__forward__t.html", "structinfix__forward__t" ],
    [ "infix_function_argument_t", "structinfix__function__argument__t.html", "structinfix__function__argument__t" ],
    [ "infix_library_t", "structinfix__library__t.html", "structinfix__library__t" ],
    [ "infix_protected_t", "structinfix__protected__t.html", "structinfix__protected__t" ],
    [ "infix_registry_t", "structinfix__registry__t.html", "structinfix__registry__t" ],
    [ "infix_reverse_abi_spec", "structinfix__reverse__abi__spec.html", "structinfix__reverse__abi__spec" ],
    [ "infix_reverse_call_frame_layout", "structinfix__reverse__call__frame__layout.html", "structinfix__reverse__call__frame__layout" ],
    [ "infix_reverse_t", "structinfix__reverse__t.html", "structinfix__reverse__t" ],
    [ "infix_struct_member_t", "structinfix__struct__member__t.html", "structinfix__struct__member__t" ],
    [ "infix_type_t", "structinfix__type__t.html", "structinfix__type__t" ],
    [ "LargeData", "structLargeData.html", "structLargeData" ],
    [ "LargeStruct", "structLargeStruct.html", "structLargeStruct" ],
    [ "MixedIntDouble", "structMixedIntDouble.html", "structMixedIntDouble" ],
    [ "my_handle", "structmy__handle.html", "structmy__handle" ],
    [ "NonPowerOfTwoStruct", "structNonPowerOfTwoStruct.html", "structNonPowerOfTwoStruct" ],
    [ "Number", "unionNumber.html", "unionNumber" ],
    [ "PackedStruct", "structPackedStruct.html", "structPackedStruct" ],
    [ "parser_state", "structparser__state.html", "structparser__state" ],
    [ "Point", "structPoint.html", "structPoint" ],
    [ "PointerStruct", "structPointerStruct.html", "structPointerStruct" ],
    [ "printer_state", "structprinter__state.html", "structprinter__state" ],
    [ "regression_test_case_t", "structregression__test__case__t.html", "structregression__test__case__t" ],
    [ "StressObject", "structStressObject.html", "structStressObject" ],
    [ "test_struct_nested", "structtest__struct__nested.html", "structtest__struct__nested" ],
    [ "test_struct_no_padding", "structtest__struct__no__padding.html", "structtest__struct__no__padding" ],
    [ "test_struct_packed", "structtest__struct__packed.html", "structtest__struct__packed" ],
    [ "test_struct_padding", "structtest__struct__padding.html", "structtest__struct__padding" ],
    [ "test_union", "uniontest__union.html", "uniontest__union" ],
    [ "TestStruct", "structTestStruct.html", "structTestStruct" ],
    [ "TestUnion", "unionTestUnion.html", "unionTestUnion" ],
    [ "UserProfile", "structUserProfile.html", "structUserProfile" ],
    [ "Vector4", "structVector4.html", "structVector4" ]
];